#macro( listOfStringToSentence $dataList)
	#if($dataList)
		#if($dataList.size() == 1)
			$dataList.get(0)
		#elseif($dataList.size() == 2)
			$dataList.get(0) and $dataList.get(1)
		#else
			#set($counter = 0)
			#foreach($item in $dataList)
				#if($counter > 0 && $counter < $dataList.size() - 1)
					, 
				#elseif($counter == $dataList.size() - 1)
					 and  
				#end
				$item
				#set($counter = $counter+1)
			#end
		#end
	#end
#end

#macro(isOrAre $dataList)
	#if($dataList)
		#if($dataList.size() == 1)
			is 
		#else
			are 
		#end
		
	#end
#end

#macro(popularProjectSentence $localityLabel $projectObj)
	popular project in $localityLabel for sale is $projectObj.name by $projectObj.builder.name  
	#if($projectObj.totalUnits > 0)
		offering total $projectObj.totalUnits units  
		#if($projectObj.minSize && $projectObj.maxSize)
			starting at size $numberFormatter.format($projectObj.minSize) sq ft 
			#if($projectObj.maxSize > $projectObj.minSize)
				and with highest $numberFormatter.format($projectObj.maxSize) sq ft
			#end
		#end
	#end
	. 
#end
#macro(localityProjectDescWithLowestAndHighestPrice $locality)
	#if($minPricedProject && $minPricedProject.minPricePerUnitArea)
			#projectDescWithLowestRate($locality.label $minPricedProject)
			#if($maxPricedProject && $maxPricedProject.maxPricePerUnitArea)
				, whereas #projectDescWithHighestRate($locality.label $maxPricedProject)
			#end	
			. 
	#end
#end
#macro(projectDescWithLowestRate $localityLabel $projectObj)
	#if($projectObj)
		#if($projectObj.minPricePerUnitArea)
			$projectObj.name by $projectObj.builder.name is available at lowest rate of Rs.  
			$numberFormatter.format($projectObj.minPricePerUnitArea) per sq ft  
			in $localityLabel  
		#end
	#end
#end
#macro(projectDescWithHighestRate $localityLabel $projectObj)
	#if($projectObj)
		#if($projectObj.maxPricePerUnitArea)
			$projectObj.name by $projectObj.builder.name is available at highest rate of Rs. 
			$numberFormatter.format($projectObj.maxPricePerUnitArea) per sq ft
		#end
	#end
#end

#macro(singularOrPlural $word $list)
	#if($list && $word)
		#if($list.size() == 1)
			  
		#else
			#set($word = $word + "s")
			$word 
		#end
	#end
#end
#macro(projectByBuilderSentence $projects)
	#removeProjectWithBuilderNameAsReputed($projects)
	#if($projects.size() == 1)
		$projects.get(0).name by $projects.get(0).builder.name
	#elseif($projects.size() == 2)
		$projects.get(0).name by $projects.get(0).builder.name and $projects.get(1).name by $projects.get(1).builder.name
	#else
		#set($counter = 0)
		#foreach($project in $projects)
			#if($counter > 0 && $counter < $projects.size() - 1)
					, 
			#elseif($counter == $projects.size() - 1)
				 and  
			#end
			$project.name by $project.builder.name
			#set($counter = $counter+1)
		#end
	#end
#end
#macro(removeProjectWithBuilderNameAsReputed $projects)
	#set($modifiedProjectList = [])
	#foreach($project in $projects)
		#if(!$project.builder.name.equals("Reputed Builder"))
			#set($temp = $modifiedProjectList.add($project))
		#end
	#end
	#set($projects = $modifiedProjectList)
#end
#macro(makePriceUserReadable $price)
	#set($amtInCorore = $price/10000000)
	#if($amtInCorore < 1)
		#set($amtInLacs = $price/100000)
		$numberFormatterDecimal.format($amtInLacs) Lacs 
	#else
		$numberFormatterDecimal.format($amtInCorore) Cr  
	#end
#end
#macro(projectByStatus $locality)
	#set( $upcomingProjects = 0)
	#set( $newLaunchProjects = 0)
	#set( $readyForPossessionProjects = 0)
	#set( $underConstructionProjects = 0)
	
	#if(${locality.projectStatusCount.get("Pre Launch")})
		#set( $upcomingProjects = ${locality.projectStatusCount.get("Pre Launch")})
	#end
	#if(${locality.projectStatusCount.get("Not Launched")})
		#set( $upcomingProjects = $upcomingProjects + ${locality.projectStatusCount.get("Not Launched")})
	#end
	#if(${locality.projectStatusCount.get("Launch")})
		#set( $newLaunchProjects = ${locality.projectStatusCount.get("Launch")})
	#end	
	#if(${locality.projectStatusCount.get("Under Construction")})
		#set( $underConstructionProjects = ${locality.projectStatusCount.get("Under Construction")})
	#end	
	#if(${locality.projectStatusCount.get("Ready for Possession")})
		#set( $readyForPossessionProjects = ${locality.projectStatusCount.get("Ready for Possession")})
	#end
	
	#if($upcomingProjects || $newLaunchProjects || $readyForPossessionProjects)
		You can find 
		#set($counter = 0)
		#if($upcomingProjects > 0)
			$upcomingProjects upcoming  
			#set($counter = $counter + 1)
		#end
		#if($newLaunchProjects > 0)
			#if($counter == 1)
				, 
			#end
			$newLaunchProjects new launches 
			#set($counter = $counter + 1)
		#end
		#if($underConstructionProjects > 0)
			#if($counter == 1)
				, 
			#end
			$underConstructionProjects under construction 
			#set($counter = $counter + 1)
		#end
		#if($readyForPossessionProjects > 0)
			#if($counter > 0)
		 	 	and   
			#end
			$readyForPossessionProjects ready to move in 
		#end
		projects in ${locality.label} from different builders.  
	#end
#end

#macro(populateAmenitiesList $amenities)
	#foreach( $amenity in $amenities )
		#if($amenity.localityAmenityTypes.name=="school" && !$schoolsList.contains($amenity.name))
			#set($temp = $schoolsList.add($amenity.name))
		#end
		#if($amenity.localityAmenityTypes.name=="hospital" && !$hospitalsList.contains($amenity.name))
		 	#set($temp = $hospitalsList.add($amenity.name))
		#end
		#if($amenity.localityAmenityTypes.name=="subway_station" && !$metroStationList.contains($amenity.name))
		 	#set($temp = $metroStationList.add($amenity.name))
		#end
	#end
#end

#macro(populateBuilderNameList $topBuilders)
	#set($popularBuildersNameList = [])
	#foreach($builder in $topBuilders)
		#if(!$builder.name.equals("Reputed Builder"))
			#set($temp = $popularBuildersNameList.add($builder.name))
		#end
	#end
#end

#macro(populateUnitTypeAndUnitNameList $properties)
	#set($unitTypesStringList = [])
	#set($unitNamesStringList = [])
	#if($properties)
		#foreach($property in $properties)
			#if(!$unitTypesStringList.contains($property.unitType))
				#set($temp = $unitTypesStringList.add($property.unitType))
			#end
			#if($property.bedrooms && $property.bedrooms > 0) 
				#set($unitName = $property.bedrooms + " BHK")
				#if(!$unitNamesStringList.contains($unitName))
					#set($temp = $unitNamesStringList.add($unitName))
				#end
			#end
		#end
		$velocityUtility.sort($unitNamesStringList)
	#end
#end

#macro(localityPriceChangeInMonth_type1 $locality)
	#if($locality.avgPriceRisePercentage && $velocityUtility.round($locality.avgPriceRisePercentage) != 0)
		The prices of #listOfStringToSentence($unitTypesStringList) in ${locality.label} have 
		#if($locality.avgPriceRisePercentage < 0)	
			DECRASED by $velocityUtility.round($velocityUtility.abs($locality.avgPriceRisePercentage))%  
		#elseif($locality.avgPriceRisePercentage > 0)
			INCREASED by $velocityUtility.round($velocityUtility.abs($locality.avgPriceRisePercentage))%  
		#else
			STAYED STABLE, 
		#end
		in past ${locality.avgPriceRiseMonths} months 
		#if(${locality.minPrice} && ${locality.maxPrice})
			with current high of ${locality.maxPrice}/SqFt and low of ${locality.minPrice}/SqFt
		#end
		. 
	#end
#end

#macro(localityPriceChangeInMonth_type2 $locality)
	#if($locality.avgPriceRisePercentage)
		The prices in the ${locality.label} are  
		#if($locality.avgPriceRisePercentage < 0)
			DECRASED by $velocityUtility.round($velocityUtility.abs($locality.avgPriceRisePercentage))%  
		#elseif($locality.avgPriceRisePercentage > 0)
			INCREASED by $velocityUtility.round($velocityUtility.abs($locality.avgPriceRisePercentage))% 
		#else
			STAYED STABLE, 
		#end
		in past ${locality.avgPriceRiseMonths} months at average price of $numberFormatter.format($locality.avgPricePerUnitArea) per SqFt.   
	#end
#end

#macro(localityAverageRating $locality)
	#if($locality.avgRatingsByCategory && $locality.avgRatingsByCategory.overallRating)
		${locality.label} in ${locality.suburb.city.label} 
		have an average rating of $velocityUtility.round($locality.avgRatingsByCategory.overallRating) 
		based on user inputs
	#end
#end
#macro(localityAvgRatingWithHighestAmenityRating $locality)
	#if($locality.avgRatingsByCategory)
		#set($highestRatedAmenity = "")
		#set($highestRating = 0)
		#if($locality.avgRatingsByCategory.location && $locality.avgRatingsByCategory.location > $highestRating)
			#set($highestRatedAmenity = "location")
			#set($highestRating = $locality.avgRatingsByCategory.location)
		#end
		#if($locality.avgRatingsByCategory.safety && $locality.avgRatingsByCategory.safety > $highestRating)
			#set($highestRatedAmenity = "safety")
			#set($highestRating = $locality.avgRatingsByCategory.safety)
		#end
		#if($locality.avgRatingsByCategory.pubTrans && $locality.avgRatingsByCategory.pubTrans > $highestRating)
			#set($highestRatedAmenity = "public transport")
			#set($highestRating = $locality.avgRatingsByCategory.pubTrans)
		#end
		#if($locality.avgRatingsByCategory.restShop && $locality.avgRatingsByCategory.restShop > $highestRating)
			#set($highestRatedAmenity = "rest shops")
			#set($highestRating = $locality.avgRatingsByCategory.restShop)
		#end
		#if($locality.avgRatingsByCategory.schools && $locality.avgRatingsByCategory.schools > $highestRating)
			#set($highestRatedAmenity = "schools")
			#set($highestRating = $locality.avgRatingsByCategory.schools)
		#end
		#if($locality.avgRatingsByCategory.parks && $locality.avgRatingsByCategory.parks > $highestRating)
			#set($highestRatedAmenity = "parks")
			#set($highestRating = $locality.avgRatingsByCategory.parks)
		#end
		#if($locality.avgRatingsByCategory.traffic && $locality.avgRatingsByCategory.traffic > $highestRating)
			#set($highestRatedAmenity = "traffic")
			#set($highestRating = $locality.avgRatingsByCategory.traffic)
		#end
		#if($locality.avgRatingsByCategory.hospitals && $locality.avgRatingsByCategory.hospitals > $highestRating)
			#set($highestRatedAmenity = "hospitals")
			#set($highestRating = $locality.avgRatingsByCategory.hospitals)
		#end
		#if($locality.avgRatingsByCategory.civic && $locality.avgRatingsByCategory.civic > $highestRating)
			#set($highestRatedAmenity = "civic")
			#set($highestRating = $locality.avgRatingsByCategory.civic)
		#end
		#if($locality.avgRatingsByCategory.overallRating)
			#localityAverageRating($locality)
			#if($highestRating > 0)
				, with highest rating of $velocityUtility.round($highestRating) for $highestRatedAmenity
			#end
			. 
		#end
	#end
#end
#macro(popularProjectWithUnitInfo)
	#if($popularProjects)
		#set($project1 = $popularProjects.get(0))
		#set($project2 = $popularProjects.get(1))
		#if($project1)
			One #popularProjectSentence(${locality.label} $project1)
			#if($project2)
				Another #popularProjectSentence(${locality.label} $project2)
			#end
		#end
	#end
#end
#macro(populateNearByLocalityNames)
	#foreach($nearLocality in $nearByLocalities)
		#if(!$nearByLocalityNameList.contains($nearLocality.label) && !$locality.label.equals($nearLocality.label))
			#set($temp = $nearByLocalityNameList.add($nearLocality.label))
		#end
	#end
#end
#macro(localityAmenityTypeDesc)
	#if($amenities)
		#set($schoolsList = [])
		#set($hospitalsList = [])
		#set($metroStationList = [])
		${locality.label} has many well known schools and Hospitals. 
		#populateAmenitiesList($amenities)
		#if($schoolsList && $schoolsList.size() > 0)
			Key Schools close to ${locality.label} #isOrAre($schoolsList) #listOfStringToSentence($schoolsList).  
		#end
		#if($hospitalsList && $hospitalsList.size() > 0)
			Key hospitals to this locality #isOrAre($hospitalsList) #listOfStringToSentence($hospitalsList).  
		#end
		#if($metroStationList && $metroStationList.size() > 0)
			Locality is close to #listOfStringToSentence($metroStationList).  
		#end
	#end
#end
#macro(singularOrPluralWord $count $word)
	#if($count > 1)
		#set($word = $word + 's')
		$word 
	#else
		$word 
	#end
#end